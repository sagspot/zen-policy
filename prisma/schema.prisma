//////////////////////////////////////////////////////////////////////////////////////////////
// DO NOT MODIFY THIS FILE                                                                  //
// This file is automatically generated by ZenStack CLI and should not be manually updated. //
//////////////////////////////////////////////////////////////////////////////////////////////

datasource db {
    provider = "postgresql"
    url = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

enum Role {
    superadmin
    admin
    staff
    provider
    customer
}

/// @@allow('create', true)
/// @@allow('create', true)
/// @@allow('read', auth().id == id || auth().role != 'customer')
/// @@allow('update', auth().id == id || auth().role == 'superadmin' || auth().role == 'admin')
/// @@allow('delete', auth().id == id || auth().role == 'superadmin' || auth().role == 'admin')
/// @@deny('read', isDeleted == true && (auth().role != 'admin' || auth().role != 'superadmin'))
/// @@deny('update', role == 'superadmin' && auth().id != id || (role == 'admin' && auth().id != id && auth().role != 'superadmin') || (role != future().role && auth().role != 'admin' && auth().role != 'superadmin') || (role != future().role && future().role == 'superadmin') || (role != future().role && future().role == 'admin' && auth().role != 'superadmin'))
model User {
    id Int @id() @default(autoincrement())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt()
    /// @omit
    isDeleted Boolean @default(false)
    /// @omit
    deletedAt DateTime?
    name String
    email String? @unique()
    role Role @default(customer)
    posts Post[]
}

/// @@allow('create', true)
/// @@allow('read', auth() != null && published)
/// @@allow('all', author == auth())
model Post {
    id Int @id() @default(autoincrement())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt()
    /// @omit
    isDeleted Boolean @default(false)
    /// @omit
    deletedAt DateTime?
    /// @length(1, 256)
    title String
    content String
    published Boolean @default(false)
    author User @relation(fields: [authorId], references: [id])
    authorId Int
}